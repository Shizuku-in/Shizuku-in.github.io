<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>チャ屋</title>
  
  
  <link href="https://blog.cya.moe/atom.xml" rel="self"/>
  
  <link href="https://blog.cya.moe/"/>
  <updated>2024-11-30T20:08:40.997Z</updated>
  <id>https://blog.cya.moe/</id>
  
  <author>
    <name>gkouen</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>就算是萝莉控也能看懂的 Hexo 部署教程</title>
    <link href="https://blog.cya.moe/2024/11/07/001/"/>
    <id>https://blog.cya.moe/2024/11/07/001/</id>
    <published>2024-11-07T15:41:03.000Z</published>
    <updated>2024-11-30T20:08:40.997Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p><a href="https://hexo.io/">Hexo</a> 是一个快速、简洁且高效的博客框架，在几秒内，即可利用靓丽的主题生成静态网页。本篇文章旨在让身为萝莉控的你也能一帆风顺地安装并部署好一个 Hexo 博客。话不多说，让我们直接步入主题。</p><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><h2 id="需要安装的软件"><a href="#需要安装的软件" class="headerlink" title="需要安装的软件"></a>需要安装的软件</h2><h3 id="git"><a href="#git" class="headerlink" title="git"></a>git</h3><p>你可以在<a href="https://git-scm.com/downloads">此处</a>下载 git 的安装包，按照提示安装即可。</p><h3 id="Node-js"><a href="#Node-js" class="headerlink" title="Node.js"></a>Node.js</h3><p>你可以在<a href="https://nodejs.org/zh-cn/download/prebuilt-installers">此处</a>下载 Node.js 的安装包，一样按照提示安装即可。</p><h2 id="验证是否安装成功"><a href="#验证是否安装成功" class="headerlink" title="验证是否安装成功"></a>验证是否安装成功</h2><p>打开 CMD 或是 PowerShell。</p><p>输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs batch">git -v<br></code></pre></td></tr></table></figure><p>这里应该会显示<code>git version &lt;你的git版本&gt;</code>。</p><p>输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs batch">node -v<br>npm -v<br></code></pre></td></tr></table></figure><p>这是应该会显示你的 Node.js 和 npm 版本。</p><p>若无问题，则让我们进入下一步。</p><h2 id="安装-Hexo-CLI"><a href="#安装-Hexo-CLI" class="headerlink" title="安装 Hexo-CLI"></a>安装 Hexo-CLI</h2><p>运行命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs batch">npm install -g hexo-cli<br></code></pre></td></tr></table></figure><p>同样地，可以使用以下指令检查 Hexo-CLI 是否安装成功：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs batch">hexo -v<br></code></pre></td></tr></table></figure><h1 id="初始化安装"><a href="#初始化安装" class="headerlink" title="初始化安装"></a>初始化安装</h1><h2 id="部署-Hexo"><a href="#部署-Hexo" class="headerlink" title="部署 Hexo"></a>部署 Hexo</h2><p>运行命令，选择一个你要部署 Hexo 的目录，如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs batch">cd D:\<br></code></pre></td></tr></table></figure><p>再次运行命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs batch">hexo init &lt;部署文件夹&gt;<br>cd &lt;部署文件夹&gt;<br>npm install<br></code></pre></td></tr></table></figure><p>若<code>npm install</code>运行不成功，可以尝试删除<code>node_modules</code>文件夹中的所有文件，再次运行该命令。</p><p>初始化后，您的项目文件夹大致将如下所示：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs text">.<br>├─.github<br>├─scaffolds<br>├─source<br>│  └─posts<br>├─themes<br>...<br></code></pre></td></tr></table></figure><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>至此，你可以测试 Hexo 是否部署成功。</p><p>定位到安装 Hexo 的根文件夹，运行命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs batch">hexo g<br>hexo s<br></code></pre></td></tr></table></figure><p>使用浏览器访问 <a href="http://localhost:4000/">http://localhost:4000/</a> ，大概就能看到部署的博客了。</p><p>另外，本地服务器默认是在 4000 端口开放的，若该端口被占用，可以尝试命令<code>hexo s -p &lt;端口&gt;</code>使用其他端口开启本地服务器。</p><h1 id="简单配置"><a href="#简单配置" class="headerlink" title="简单配置"></a>简单配置</h1><p>打开根目录下的<code>_config.yml</code>，你可以在<a href="https://hexo.io/zh-cn/docs/configuration">官方文档</a>中找到详细的配置说明。</p><p>我们可以对其进行以下简单的配置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">title:</span> <span class="hljs-comment">#这里填你博客的标题</span><br><span class="hljs-attr">subtitle:</span> <span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-attr">keywords:</span> <br><span class="hljs-attr">author:</span> <br><span class="hljs-attr">language:</span> <span class="hljs-comment">#可以填zh-CN</span><br><span class="hljs-attr">timezone:</span> <span class="hljs-string">&#x27;&#x27;</span> <span class="hljs-comment">#可以填Asia/Shanghai</span><br></code></pre></td></tr></table></figure><h1 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h1><p>可以在<a href="https://hexo.io/themes/">这里</a>找到众多好看的主题，挑选一个，找到该主题的配置指南，按教程安装即可。</p><h1 id="部署到-GitHub-Pages"><a href="#部署到-GitHub-Pages" class="headerlink" title="部署到 GitHub Pages"></a>部署到 GitHub Pages</h1><h2 id="创建-GitHub-账号"><a href="#创建-GitHub-账号" class="headerlink" title="创建 GitHub 账号"></a>创建 GitHub 账号</h2><p>在<a href="https://github.com/signup/">这里</a>创建你的 GitHub 账号。</p><h2 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h2><p>登录刚刚创建的账号，回到 GitHub <a href="https://github.com/">主页</a>，点击右上角的<code>+</code>号，再点击<code>New repository</code>以创建托管 Hexo 的仓库。</p><p><code>Repository name</code>填写<code>&lt;你的 GitHub 用户名&gt;.github.io</code>。如，若我的 GitHub 用户名为 gkouen 的话，<code>Repository name</code>就应该填写为<code>gkouen.github.io</code>。</p><p>权限设为<code>Public</code>，其余的选项尚可不用配置。</p><h2 id="创建-Personal-access-token"><a href="#创建-Personal-access-token" class="headerlink" title="创建 Personal access token"></a>创建 Personal access token</h2><p>在 GitHub 点击右上角头像，进入<code>Settings</code>→<code>Developer settings</code>→<code>Personal access tokens</code>→<code>Tokens (classic)</code>，或直接点击<a href="https://github.com/settings/tokens">此处</a>。</p><p>接下来，点击右边的<code>Generate new token (classic)</code>以创建 token，<code>Note</code>中随便起一个自己喜欢的名字，<code>Expiration</code>看情况自己设置，在<code>Select scopes</code>中勾选<code>repo</code>和<code>delete_repo</code>，最后点<code>Generate token</code>。</p><p>随后会像图中一样显示出 token，请找个地方把它粘贴下来。<br><img src="/img/001-02.webp" alt="示例"></p><h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><p>定位到部署 Hexo 的根文件夹，运行命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs batch">npm install hexo-deployer-git --save<br></code></pre></td></tr></table></figure><h2 id="配置插件"><a href="#配置插件" class="headerlink" title="配置插件"></a>配置插件</h2><p>打开根目录下的<code>_config.yml</code>，翻到最下面，将<code>deploy</code>这一项改为以下内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br>  <span class="hljs-attr">repo:</span> <span class="hljs-string">https://github.com/&lt;你的</span> <span class="hljs-string">GitHub</span> <span class="hljs-string">用户名&gt;/&lt;你的</span> <span class="hljs-string">GitHub</span> <span class="hljs-string">用户名&gt;.github.io</span><br>  <span class="hljs-attr">branch:</span> <span class="hljs-string">main</span><br>  <span class="hljs-attr">token:</span> <span class="hljs-string">&#x27;&#x27;</span> <span class="hljs-comment">#这里填写上面创建的token</span><br></code></pre></td></tr></table></figure><h2 id="部署博客"><a href="#部署博客" class="headerlink" title="部署博客"></a>部署博客</h2><p>定位到部署 Hexo 的根文件夹，运行命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs batch">hexo g<br>hexo d<br></code></pre></td></tr></table></figure><p>随后可能会弹出窗口让你登录 GitHub 账号，按照提示操作即可。另外，每次在运行<code>hexo d</code>之前都需要运行<code>hexo g</code>以生成静态页面，或直接运行<code>hexo g -d</code>。</p><p>若部署出现问题，可以尝试运行<code>hexo c</code>并再次重复以上步骤。</p><h2 id="检查"><a href="#检查" class="headerlink" title="检查"></a>检查</h2><p>使用浏览器访问 <code>&lt;你的 GitHub 用户名&gt;.github.io</code> ，以检查部署是否成功。</p><h2 id="解析到自定义域名"><a href="#解析到自定义域名" class="headerlink" title="解析到自定义域名"></a>解析到自定义域名</h2><ol><li>在<code>source</code>文件夹中创建<code>CNAME</code>文件，在其中填入你的域名。</li><li>在域名的 DNS 记录中添加类型为 CNAME 的记录并指向你 GitHub Pages 的网址。</li><li>运行<code>hexo g -d</code>以部署。</li><li>访问你的域名，检查是否成功。</li></ol><h1 id="部署到-Vercel"><a href="#部署到-Vercel" class="headerlink" title="部署到 Vercel"></a>部署到 Vercel</h1><h2 id="待填…-testextend"><a href="#待填…-testextend" class="headerlink" title="待填…# testextend"></a>待填…<br># test<br><div class="group-image-container"><div class="group-image-row"><div class="group-image-wrap"><img src="/img/001-00.webp"></div><div class="group-image-wrap"><img src="/img/001-01.webp"></div><div class="group-image-wrap"><img src="/img/001-02.webp"></div></div><div class="group-image-row"><div class="group-image-wrap"><img src="/img/basic/404.webp"></div><div class="group-image-wrap"><img src="/img/basic/about-01.webp"></div></div></div><br>extend</h2><ul><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li>–</li><li></li><li></li><li>–</li><li></li><li></li><li>–</li><li></li><li></li><li>–</li><li></li><li></li><li>–</li><li></li><li></li><li>–</li><li></li><li></li><li>–</li><li></li><li></li><li>–</li><li></li><li></li><li>–</li><li></li><li></li><li>–</li><li></li><li></li><li>–</li><li></li><li></li><li></li><li>exterior image:<div class="group-image-container"><div class="group-image-row"><div class="group-image-wrap"><img src="https://p.inari.site/usr/1303/674b709830ac9.jpg" alt="{AE73E9EF-7F8E-B409-7850-291749EFCB60}.jpg"></div><div class="group-image-wrap"><img src="https://p.inari.site/usr/1303/674b709888479.jpg" alt="94647006_p0_master1200.jpg"></div><div class="group-image-wrap"><img src="https://p.inari.site/usr/881/65ec826b3f8ac.jpg" alt="65ec826b3f8ac.jpg"></div></div><div class="group-image-row"><div class="group-image-wrap"><img src="https://p.inari.site/usr/1303/674b70990b4e3.png" alt="Gbg2j2YboAAinOa_waifu2x_3x_jpg.png"></div><div class="group-image-wrap"><img src="https://p.inari.site/usr/1303/674b70991be79.jpg" alt="41CFB4A8EBF101E90BFDB22588E47109.jpg"></div><div class="group-image-wrap"><img src="https://p.inari.site/usr/1303/674b70995b578.png" alt="yande.re 1173228 garter jelee-chan landscape umituki_yoru yoru_no_kurage_wa_oyogenai.png"></div></div><div class="group-image-row"><div class="group-image-wrap"><img src="https://p.inari.site/usr/1303/674b7099f2fb0.jpg" alt="90465806_p0.jpg"></div></div></div></li></ul>]]></content>
    
    
    <summary type="html">什么，你也是萝莉控？那来部署独属于自己的博客吧！</summary>
    
    
    
    
    <category term="技术" scheme="https://blog.cya.moe/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
</feed>
